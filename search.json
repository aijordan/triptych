[{"path":"https://aijordan.github.io/triptych/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 triptych authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://aijordan.github.io/triptych/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Timo Dimitriadis. Author. Alexander . Jordan. Author, maintainer.","code":""},{"path":"https://aijordan.github.io/triptych/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Dimitriadis T, Jordan AI (2023). triptych: Diagnostic Graphics Evaluate Forecast Performance. https://github.com/aijordan/triptych/, https://aijordan.github.io/triptych/.","code":"@Manual{,   title = {triptych: Diagnostic Graphics to Evaluate Forecast Performance},   author = {Timo Dimitriadis and Alexander I. Jordan},   year = {2023},   note = {https://github.com/aijordan/triptych/, https://aijordan.github.io/triptych/}, }"},{"path":"https://aijordan.github.io/triptych/index.html","id":"triptych--diagnostic-graphics-to-evaluate-forecast-performance","dir":"","previous_headings":"","what":"Diagnostic Graphics to Evaluate Forecast Performance","title":"Diagnostic Graphics to Evaluate Forecast Performance","text":"Overall predictive performance measured mean score (loss), decomposes miscalibration, discrimination, uncertainty components. main focus visualization distinct complementary aspects joint displays. See Dimitriadis, Gneiting, Jordan, Vogel (2023) arXiv:2301.10803.","code":""},{"path":"https://aijordan.github.io/triptych/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Diagnostic Graphics to Evaluate Forecast Performance","text":"(Soon) Install latest release triptych CRAN : Install development version triptych :","code":"install.packages(\"triptych\") # install.packages(\"devtools\") devtools::install_github(\"aijordan/triptych\")"},{"path":"https://aijordan.github.io/triptych/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Diagnostic Graphics to Evaluate Forecast Performance","text":"","code":"library(triptych)  # Predictions and observations set.seed(20230817) predictions <- matrix(runif(1000), ncol = 10) colnames(predictions) <- sprintf(\"Method_%02i\", 1:10) observations <- rbinom(100, 1, predictions[, 1])  # Construct and inspect tr <- triptych(predictions, observations) tr #> # A tibble: 10 × 5 #>    forecast           murphy     reliability             roc          mcbdsc #>    <chr>          <trpt_mur>      <trpt_rel>      <trpt_roc>   <trpt_mcbdsc> #>  1 Method_01 <named list[3]> <named list[3]> <named list[3]> <named list[3]> #>  2 Method_02 <named list[3]> <named list[3]> <named list[3]> <named list[3]> #>  3 Method_03 <named list[3]> <named list[3]> <named list[3]> <named list[3]> #>  4 Method_04 <named list[3]> <named list[3]> <named list[3]> <named list[3]> #>  5 Method_05 <named list[3]> <named list[3]> <named list[3]> <named list[3]> #>  6 Method_06 <named list[3]> <named list[3]> <named list[3]> <named list[3]> #>  7 Method_07 <named list[3]> <named list[3]> <named list[3]> <named list[3]> #>  8 Method_08 <named list[3]> <named list[3]> <named list[3]> <named list[3]> #>  9 Method_09 <named list[3]> <named list[3]> <named list[3]> <named list[3]> #> 10 Method_10 <named list[3]> <named list[3]> <named list[3]> <named list[3]> class(tr) #> [1] \"triptych\"   \"tbl_df\"     \"tbl\"        \"data.frame\"  # 1. Choose 4 predictions # 2. Add consistency bands (for reliability curves) # 3. Create patchwork object # 4. Adjust the title of the legend dplyr::slice_head(tr, n = 4) |>   add_consistency(level = 0.9, n_boot = 100) |>   autoplot() &   ggplot2::guides(colour = ggplot2::guide_legend(\"Predictions\")) # From already computed triptych estimates(tr$mcbdsc) #> # A tibble: 10 × 5 #>    forecast  mean_score    MCB     DSC   UNC #>    <chr>          <dbl>  <dbl>   <dbl> <dbl> #>  1 Method_01      0.173 0.0279 0.105    0.25 #>  2 Method_02      0.357 0.110  0.00281  0.25 #>  3 Method_03      0.338 0.0970 0.00903  0.25 #>  4 Method_04      0.294 0.0583 0.0140   0.25 #>  5 Method_05      0.307 0.0704 0.0138   0.25 #>  6 Method_06      0.326 0.0863 0.0107   0.25 #>  7 Method_07      0.338 0.0952 0.00724  0.25 #>  8 Method_08      0.314 0.0789 0.0145   0.25 #>  9 Method_09      0.338 0.0982 0.0103   0.25 #> 10 Method_10      0.354 0.116  0.0118   0.25 autoplot(tr$mcbdsc) # Or standalone: # mcbdsc(predictions, observations) |> autoplot() # mcbdsc(predictions, observations) |> estimates()"},{"path":"https://aijordan.github.io/triptych/reference/accessors.html","id":null,"dir":"Reference","previous_headings":"","what":"Accessing original forecast and observation data for triptych objects — accessors","title":"Accessing original forecast and observation data for triptych objects — accessors","text":"Accessing original forecast observation data triptych objects","code":""},{"path":"https://aijordan.github.io/triptych/reference/accessors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accessing original forecast and observation data for triptych objects — accessors","text":"","code":"forecasts(x, ...)  observations(x, ...)"},{"path":"https://aijordan.github.io/triptych/reference/accessors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accessing original forecast and observation data for triptych objects — accessors","text":"x object relevant information extracted. ... Additional arguments passed methods.","code":""},{"path":"https://aijordan.github.io/triptych/reference/accessors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accessing original forecast and observation data for triptych objects — accessors","text":"forecasts(): tibble original forecasts long format. observations(): vector observations.","code":""},{"path":[]},{"path":"https://aijordan.github.io/triptych/reference/add_confidence.html","id":null,"dir":"Reference","previous_headings":"","what":"Adding confidence regions — add_confidence","title":"Adding confidence regions — add_confidence","text":"Adding confidence regions","code":""},{"path":"https://aijordan.github.io/triptych/reference/add_confidence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adding confidence regions — add_confidence","text":"","code":"add_confidence(x, level, ...)"},{"path":"https://aijordan.github.io/triptych/reference/add_confidence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adding confidence regions — add_confidence","text":"x object confidence region added. level single value level confidence. ... Additional arguments passed methods.","code":""},{"path":"https://aijordan.github.io/triptych/reference/add_consistency.html","id":null,"dir":"Reference","previous_headings":"","what":"Adding consistency regions — add_consistency","title":"Adding consistency regions — add_consistency","text":"Adding consistency regions","code":""},{"path":"https://aijordan.github.io/triptych/reference/add_consistency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adding consistency regions — add_consistency","text":"","code":"add_consistency(x, level, ...)"},{"path":"https://aijordan.github.io/triptych/reference/add_consistency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adding consistency regions — add_consistency","text":"x object consistency region added. level single value level confidence. ... Additional arguments passed methods.","code":""},{"path":"https://aijordan.github.io/triptych/reference/estimates.html","id":null,"dir":"Reference","previous_headings":"","what":"Accessing diagnostic estimate data — estimates.triptych_mcbdsc","title":"Accessing diagnostic estimate data — estimates.triptych_mcbdsc","text":"Accessing diagnostic estimate data","code":""},{"path":"https://aijordan.github.io/triptych/reference/estimates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accessing diagnostic estimate data — estimates.triptych_mcbdsc","text":"","code":"# S3 method for triptych_mcbdsc estimates(x, ...)  # S3 method for triptych_murphy estimates(x, at = NULL, ...)  estimates(x, at, ...)  # S3 method for triptych_reliability estimates(x, at = NULL, ...)  # S3 method for triptych_roc estimates(x, at = NULL, p1 = mean(observations(x)), ...)"},{"path":"https://aijordan.github.io/triptych/reference/estimates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accessing diagnostic estimate data — estimates.triptych_mcbdsc","text":"x object estimate information extracted. ... Additional arguments passed methods. vector thresholds x evaluated. p1 unconditional event probability. Used combination determine diagonal lines along determine estimate.","code":""},{"path":"https://aijordan.github.io/triptych/reference/estimates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accessing diagnostic estimate data — estimates.triptych_mcbdsc","text":"tibble relevant information describing diagnostic estimate (Murphy curve, reliability curve, ROC curve, score decomposition) supplied forecasting methods.","code":""},{"path":[]},{"path":"https://aijordan.github.io/triptych/reference/ex_binary_nested.html","id":null,"dir":"Reference","previous_headings":"","what":"Example data set with binary observations and forecasts from nested information sets — ex_binary_nested","title":"Example data set with binary observations and forecasts from nested information sets — ex_binary_nested","text":"detailed explanation simulation setting...","code":""},{"path":"https://aijordan.github.io/triptych/reference/ex_binary_nested.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example data set with binary observations and forecasts from nested information sets — ex_binary_nested","text":"","code":"ex_binary_nested"},{"path":[]},{"path":"https://aijordan.github.io/triptych/reference/ex_binary_nested.html","id":"ex-binary-nested","dir":"Reference","previous_headings":"","what":"ex_binary_nested","title":"Example data set with binary observations and forecasts from nested information sets — ex_binary_nested","text":"data frame 1,000 rows 4 columns: y observations X0 forecasts largest information set X1 forecasts second largest information set X2 forecasts third largest information set X3 forecasts smallest information set","code":""},{"path":"https://aijordan.github.io/triptych/reference/mcbdsc.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluation of forecasts using score decompositions — mcbdsc","title":"Evaluation of forecasts using score decompositions — mcbdsc","text":"score decomposition splits mean score three components miscalibration (MCB), discrimination (DSC), uncertainty (UNC). Plotting DSC component MCB component allows quick visual inspection predictive performance many forecasting methods.","code":""},{"path":"https://aijordan.github.io/triptych/reference/mcbdsc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluation of forecasts using score decompositions — mcbdsc","text":"","code":"mcbdsc(x, y = NULL, score = \"Brier_score\", ...)  as_mcbdsc(x, r)"},{"path":"https://aijordan.github.io/triptych/reference/mcbdsc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluation of forecasts using score decompositions — mcbdsc","text":"x data frame, list, matrix, object can coerced tibble. Contains numeric forecasts. y numeric vector observations. missing, column name \"y\" must present tibble coerced x. score string specifying score function. One : \"Brier_score\" (default), \"log_score\", \"MR_score\". ... Unused. r reference triptych_mcbdsc object whose attributes used casting.","code":""},{"path":"https://aijordan.github.io/triptych/reference/mcbdsc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluation of forecasts using score decompositions — mcbdsc","text":"triptych_mcbdsc object, vctrs_vctr subclass, length equal number forecasting methods supplied x. entry named according corresponding forecasting method, contains list named objects: estimate: data frame score decomposition. region: Either empty list, (yet determined) object added add_confidence(). x: numeric vector original forecasts. Access convenient estimates(), regions(), forecasts().","code":""},{"path":[]},{"path":"https://aijordan.github.io/triptych/reference/mcbdsc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluation of forecasts using score decompositions — mcbdsc","text":"","code":"# Construction forecasts <- matrix(runif(300), ncol = 3) colnames(forecasts) <- c(\"Method_1\", \"Method_2\", \"Method_3\") observations <- rbinom(100, 1, forecasts[, 1]) md1 <- mcbdsc(forecasts, observations)  pred_obs <- tibble::tibble(M1 = runif(100), y = rbinom(100, 1, M1)) md2 <- mcbdsc(pred_obs)  # Visualization autoplot(md1)"},{"path":"https://aijordan.github.io/triptych/reference/murphy.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluation of forecasts using Murphy curves — murphy","title":"Evaluation of forecasts using Murphy curves — murphy","text":"Murphy curve visualizes economic utility displaying mean elementary scores across threshold values.","code":""},{"path":"https://aijordan.github.io/triptych/reference/murphy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluation of forecasts using Murphy curves — murphy","text":"","code":"murphy(x, y = NULL, ref = NULL, ...)  as_murphy(x, r)"},{"path":"https://aijordan.github.io/triptych/reference/murphy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluation of forecasts using Murphy curves — murphy","text":"x data frame, list, matrix, object can coerced tibble. Contains numeric forecasts. y numeric vector observations. missing, column name \"y\" must present tibble coerced x. ref numeric vector reference forecasts. Can also supplied column name \"ref\" tibble coerced x. ... Unused. r reference triptych_murphy object whose attributes used casting.","code":""},{"path":"https://aijordan.github.io/triptych/reference/murphy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluation of forecasts using Murphy curves — murphy","text":"triptych_murphy object, vctrs_vctr subclass, length equal number forecasting methods supplied x. entry named according corresponding forecasting method, contains list named objects: * estimate: data frame threshold corresponding mean score values. * region: Either empty list, data frame point confidence intervals added add_confidence(). * x: numeric vector original forecasts. Access convenient estimates(), regions(), forecasts().","code":""},{"path":[]},{"path":"https://aijordan.github.io/triptych/reference/murphy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluation of forecasts using Murphy curves — murphy","text":"","code":"# Construction forecasts <- matrix(runif(300), ncol = 3) colnames(forecasts) <- c(\"Method_1\", \"Method_2\", \"Method_3\") observations <- rbinom(100, 1, forecasts[, 1]) mur1 <- murphy(forecasts, observations)  pred_obs <- tibble::tibble(M1 = runif(100), y = rbinom(100, 1, M1)) mur2 <- murphy(pred_obs)  # Visualization autoplot(mur1)   library(ggplot2) df_est <- estimates(mur1) ggplot(df_est) +   geom_path(aes(x = knot, y = mean_score, col = forecast))"},{"path":"https://aijordan.github.io/triptych/reference/plot.triptych.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot methods for the triptych classes — plot.triptych","title":"Plot methods for the triptych classes — plot.triptych","text":"Plot methods triptych classes","code":""},{"path":"https://aijordan.github.io/triptych/reference/plot.triptych.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot methods for the triptych classes — plot.triptych","text":"","code":"# S3 method for triptych plot(x, ...)  # S3 method for triptych autoplot(object, ...)  # S3 method for triptych_murphy plot(x, ...)  # S3 method for triptych_murphy autoplot(object, ...)  # S3 method for triptych_reliability plot(x, ...)  # S3 method for triptych_reliability autoplot(object, ..., breaks = seq(0, 1, length.out = 11))  # S3 method for triptych_roc plot(x, ...)  # S3 method for triptych_roc autoplot(object, ...)  # S3 method for triptych_mcbdsc plot(x, ...)  # S3 method for triptych_mcbdsc autoplot(   object,   ...,   n_isolines = 10,   colour_values = \"black\",   colour_unc = \"#00BF7D\",   MCBDSC_repel = FALSE,   MCB_lim = NA,   DSC_lim = NA )"},{"path":"https://aijordan.github.io/triptych/reference/plot.triptych.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot methods for the triptych classes — plot.triptych","text":"x object inherits one triptych classes. ... Arguments passed autoplot.triptych() methods triptych classes. object object inherits one triptych classes. breaks vector bin boundaries geom_histogram() layer. Set NA disable. n_isolines number isolines showing mean scores. colour_values colour specification passed values argument scale_colour_manual(). Recycled length 1. colour_unc colour specification highlighting UNC component layers. MCBDSC_repel boolean value indicating whether labels placed ggrepel package. MCB_lim plot limits x-axis (MCB component). DSC_lim plot limits y-axis (DSC component).","code":""},{"path":"https://aijordan.github.io/triptych/reference/plot.triptych.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot methods for the triptych classes — plot.triptych","text":"object class 'triptych': patchwork object (invisibly). triptych objects: ggplot object (invisibly). Every plot() method wraps corresponding autoplot() method, followed explicit print() call. , always draws plot, even assignment within loop.","code":""},{"path":"https://aijordan.github.io/triptych/reference/plot.triptych.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot methods for the triptych classes — plot.triptych","text":"","code":"forecasts <- matrix(runif(300), ncol = 3) colnames(forecasts) <- c(\"Method_1\", \"Method_2\", \"Method_3\") observations <- rbinom(100, 1, forecasts[, 1]) tr <- triptych(forecasts, observations)  autoplot(tr)  autoplot(tr$murphy)  autoplot(tr$reliability)  autoplot(tr$roc)  autoplot(tr$mcbdsc)"},{"path":"https://aijordan.github.io/triptych/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. ggplot2 autoplot","code":""},{"path":"https://aijordan.github.io/triptych/reference/regions.html","id":null,"dir":"Reference","previous_headings":"","what":"Accessing confidence/consistency region data — regions.triptych_mcbdsc","title":"Accessing confidence/consistency region data — regions.triptych_mcbdsc","text":"Accessing confidence/consistency region data","code":""},{"path":"https://aijordan.github.io/triptych/reference/regions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accessing confidence/consistency region data — regions.triptych_mcbdsc","text":"","code":"# S3 method for triptych_mcbdsc regions(x, ...)  # S3 method for triptych_murphy regions(x, ...)  regions(x, ...)  # S3 method for triptych_reliability regions(x, ...)  # S3 method for triptych_roc regions(x, ...)"},{"path":"https://aijordan.github.io/triptych/reference/regions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accessing confidence/consistency region data — regions.triptych_mcbdsc","text":"x object region information extracted. ... Additional arguments passed methods.","code":""},{"path":"https://aijordan.github.io/triptych/reference/regions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accessing confidence/consistency region data — regions.triptych_mcbdsc","text":"tibble relevant information uncertainty quantification chosen diagnostic (Murphy curve, reliability curve, ROC curve, score decomposition) supplied forecasting methods.","code":""},{"path":[]},{"path":"https://aijordan.github.io/triptych/reference/reliability.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluation of forecasts using reliability curves — reliability","title":"Evaluation of forecasts using reliability curves — reliability","text":"reliability curve visualizes miscalibration displaying (isotonic) conditional event probability forecast value.","code":""},{"path":"https://aijordan.github.io/triptych/reference/reliability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluation of forecasts using reliability curves — reliability","text":"","code":"reliability(x, y = NULL, ...)  as_reliability(x, r)"},{"path":"https://aijordan.github.io/triptych/reference/reliability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluation of forecasts using reliability curves — reliability","text":"x data frame, list, matrix, object can coerced tibble. Contains numeric forecasts. y numeric vector observations. missing, column name \"y\" must present tibble coerced x. ... Unused. r reference triptych_mcbdsc object whose attributes used casting.","code":""},{"path":"https://aijordan.github.io/triptych/reference/reliability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluation of forecasts using reliability curves — reliability","text":"triptych_reliability object, vctrs_vctr subclass, length equal number forecasting methods supplied x. entry named according corresponding forecasting method, contains list named objects: estimate: data frame isotonic regression estimate. region: Either empty list, data frame pointwise consistency confidence intervals added add_consistency() add_confidence(), respectively. x: numeric vector original forecasts. Access convenient estimates(), regions(), forecasts().","code":""},{"path":[]},{"path":"https://aijordan.github.io/triptych/reference/reliability.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluation of forecasts using reliability curves — reliability","text":"","code":"# Construction forecasts <- matrix(runif(300), ncol = 3) colnames(forecasts) <- c(\"Method_1\", \"Method_2\", \"Method_3\") observations <- rbinom(100, 1, forecasts[, 1]) rel1 <- reliability(forecasts, observations)  pred_obs <- tibble::tibble(M1 = runif(100), y = rbinom(100, 1, M1)) rel2 <- reliability(pred_obs)  # Visualization autoplot(rel1)   library(ggplot2) df_est <- estimates(rel1) ggplot(df_est) +   geom_segment(aes(x = 0, y = 0, xend = 1, yend = 1)) +   geom_path(aes(x = x, y = CEP, col = forecast)) +   labs(x = \"Forecast value\", y = \"Cond. event probability\")"},{"path":"https://aijordan.github.io/triptych/reference/resampling_Bernoulli.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrap observation resampling for triptych objects — resampling_Bernoulli.triptych_murphy","title":"Bootstrap observation resampling for triptych objects — resampling_Bernoulli.triptych_murphy","text":"Bootstrap observation resampling triptych objects","code":""},{"path":"https://aijordan.github.io/triptych/reference/resampling_Bernoulli.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrap observation resampling for triptych objects — resampling_Bernoulli.triptych_murphy","text":"","code":"# S3 method for triptych_murphy resampling_Bernoulli(x, level = 0.9, n_boot = 1000, ...)  # S3 method for triptych_reliability resampling_Bernoulli(   x,   level = 0.9,   n_boot = 1000,   position = c(\"diagonal\", \"estimate\"),   ... )  resampling_Bernoulli(x, level = 0.9, n_boot = 1000, ...)  # S3 method for triptych_roc resampling_Bernoulli(x, level = 0.9, n_boot = 1000, ...)"},{"path":"https://aijordan.github.io/triptych/reference/resampling_Bernoulli.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrap observation resampling for triptych objects — resampling_Bernoulli.triptych_murphy","text":"x One triptych objects. level single value determines quantiles bootstrap sample return. quantiles envelop level * n_boot bootstrap draws. n_boot number bootstrap samples. ... Additional arguments passed methods. position Either \"estimate\" confidence regions, \"diagonal\" consistency regions.","code":""},{"path":"https://aijordan.github.io/triptych/reference/resampling_Bernoulli.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootstrap observation resampling for triptych objects — resampling_Bernoulli.triptych_murphy","text":"list tibbles contain information draw confidence regions. length equal number forecasting methods x.","code":""},{"path":"https://aijordan.github.io/triptych/reference/resampling_Bernoulli.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bootstrap observation resampling for triptych objects — resampling_Bernoulli.triptych_murphy","text":"","code":"# Triptych construction forecasts <- matrix(runif(300), ncol = 3) colnames(forecasts) <- c(\"Method_1\", \"Method_2\", \"Method_3\") observations <- rbinom(100, 1, forecasts[, 1]) tr <- triptych(forecasts, observations)  resampling_cases(tr$murphy, n_boot = 50) #> $Method_1 #> # A tibble: 1,000 × 5 #>    threshold    lower   upper method              level #>        <dbl>    <dbl>   <dbl> <chr>               <dbl> #>  1   0       0        0       resampling_cases_50   0.9 #>  2   0.00100 0.000821 0.00116 resampling_cases_50   0.9 #>  3   0.00200 0.00164  0.00232 resampling_cases_50   0.9 #>  4   0.00300 0.00246  0.00348 resampling_cases_50   0.9 #>  5   0.00400 0.00328  0.00464 resampling_cases_50   0.9 #>  6   0.00501 0.00410  0.00581 resampling_cases_50   0.9 #>  7   0.00601 0.00492  0.00697 resampling_cases_50   0.9 #>  8   0.00701 0.00575  0.00813 resampling_cases_50   0.9 #>  9   0.00801 0.00657  0.00929 resampling_cases_50   0.9 #> 10   0.00901 0.00739  0.0105  resampling_cases_50   0.9 #> # ℹ 990 more rows #>  #> $Method_2 #> # A tibble: 1,000 × 5 #>    threshold    lower   upper method              level #>        <dbl>    <dbl>   <dbl> <chr>               <dbl> #>  1   0       0        0       resampling_cases_50   0.9 #>  2   0.00100 0.000741 0.00112 resampling_cases_50   0.9 #>  3   0.00200 0.00148  0.00224 resampling_cases_50   0.9 #>  4   0.00300 0.00222  0.00336 resampling_cases_50   0.9 #>  5   0.00400 0.00296  0.00448 resampling_cases_50   0.9 #>  6   0.00501 0.00370  0.00561 resampling_cases_50   0.9 #>  7   0.00601 0.00444  0.00673 resampling_cases_50   0.9 #>  8   0.00701 0.00519  0.00785 resampling_cases_50   0.9 #>  9   0.00801 0.00577  0.00833 resampling_cases_50   0.9 #> 10   0.00901 0.00649  0.00937 resampling_cases_50   0.9 #> # ℹ 990 more rows #>  #> $Method_3 #> # A tibble: 1,000 × 5 #>    threshold    lower   upper method              level #>        <dbl>    <dbl>   <dbl> <chr>               <dbl> #>  1   0       0        0       resampling_cases_50   0.9 #>  2   0.00100 0.000821 0.00112 resampling_cases_50   0.9 #>  3   0.00200 0.00164  0.00224 resampling_cases_50   0.9 #>  4   0.00300 0.00246  0.00336 resampling_cases_50   0.9 #>  5   0.00400 0.00328  0.00448 resampling_cases_50   0.9 #>  6   0.00501 0.00410  0.00561 resampling_cases_50   0.9 #>  7   0.00601 0.00517  0.0649  resampling_cases_50   0.9 #>  8   0.00701 0.00603  0.0657  resampling_cases_50   0.9 #>  9   0.00801 0.00689  0.0666  resampling_cases_50   0.9 #> 10   0.00901 0.00775  0.0674  resampling_cases_50   0.9 #> # ℹ 990 more rows #>  resampling_cases(tr$reliability, position = \"estimate\", n_boot = 50) #> $Method_1 #> # A tibble: 100 × 5 #>         x lower  upper method              level #>     <dbl> <dbl>  <dbl> <chr>               <dbl> #>  1 0.0218     0 0      resampling_cases_50   0.9 #>  2 0.0237     0 0      resampling_cases_50   0.9 #>  3 0.0276     0 0      resampling_cases_50   0.9 #>  4 0.0279     0 0      resampling_cases_50   0.9 #>  5 0.0345     0 0      resampling_cases_50   0.9 #>  6 0.0494     0 0      resampling_cases_50   0.9 #>  7 0.0616     0 0      resampling_cases_50   0.9 #>  8 0.0623     0 0      resampling_cases_50   0.9 #>  9 0.0781     0 0      resampling_cases_50   0.9 #> 10 0.0797     0 0.0128 resampling_cases_50   0.9 #> # ℹ 90 more rows #>  #> $Method_2 #> # A tibble: 100 × 5 #>          x lower  upper method              level #>      <dbl> <dbl>  <dbl> <chr>               <dbl> #>  1 0.00725   0   0      resampling_cases_50   0.9 #>  2 0.00760   0   0.0527 resampling_cases_50   0.9 #>  3 0.00963   0   0.476  resampling_cases_50   0.9 #>  4 0.0145    0   0.5    resampling_cases_50   0.9 #>  5 0.0225    0   0.5    resampling_cases_50   0.9 #>  6 0.0287    0.2 0.5    resampling_cases_50   0.9 #>  7 0.0327    0.2 0.5    resampling_cases_50   0.9 #>  8 0.0596    0.2 0.5    resampling_cases_50   0.9 #>  9 0.0766    0.2 0.5    resampling_cases_50   0.9 #> 10 0.0889    0.2 0.5    resampling_cases_50   0.9 #> # ℹ 90 more rows #>  #> $Method_3 #> # A tibble: 100 × 5 #>          x  lower upper method              level #>      <dbl>  <dbl> <dbl> <chr>               <dbl> #>  1 0.00598 0.182  0.531 resampling_cases_50   0.9 #>  2 0.0120  0      0.531 resampling_cases_50   0.9 #>  3 0.0132  0.0527 0.533 resampling_cases_50   0.9 #>  4 0.0208  0.182  0.533 resampling_cases_50   0.9 #>  5 0.0275  0.167  0.533 resampling_cases_50   0.9 #>  6 0.0297  0.167  0.545 resampling_cases_50   0.9 #>  7 0.0573  0.167  0.545 resampling_cases_50   0.9 #>  8 0.0691  0.167  0.545 resampling_cases_50   0.9 #>  9 0.0698  0.167  0.545 resampling_cases_50   0.9 #> 10 0.114   0.167  0.545 resampling_cases_50   0.9 #> # ℹ 90 more rows #>  resampling_cases(tr$roc, n_boot = 50) #> $Method_1 #> # A tibble: 202 × 4 #>         FAR     HR method              level #>       <dbl>  <dbl> <chr>               <dbl> #>  1 0        0      resampling_cases_50   0.9 #>  2 0        0.0192 resampling_cases_50   0.9 #>  3 0        0.0385 resampling_cases_50   0.9 #>  4 0        0.0577 resampling_cases_50   0.9 #>  5 0        0.0769 resampling_cases_50   0.9 #>  6 0        0.0962 resampling_cases_50   0.9 #>  7 0        0.115  resampling_cases_50   0.9 #>  8 0.000150 0.134  resampling_cases_50   0.9 #>  9 0.00183  0.152  resampling_cases_50   0.9 #> 10 0.00470  0.169  resampling_cases_50   0.9 #> # ℹ 192 more rows #>  #> $Method_2 #> # A tibble: 202 × 4 #>        FAR     HR method              level #>      <dbl>  <dbl> <chr>               <dbl> #>  1 0       0      resampling_cases_50   0.9 #>  2 0.00926 0.0107 resampling_cases_50   0.9 #>  3 0.0185  0.0214 resampling_cases_50   0.9 #>  4 0.0278  0.0321 resampling_cases_50   0.9 #>  5 0.0370  0.0427 resampling_cases_50   0.9 #>  6 0.0463  0.0534 resampling_cases_50   0.9 #>  7 0.0556  0.0641 resampling_cases_50   0.9 #>  8 0.0648  0.0748 resampling_cases_50   0.9 #>  9 0.0741  0.0855 resampling_cases_50   0.9 #> 10 0.0833  0.0962 resampling_cases_50   0.9 #> # ℹ 192 more rows #>  #> $Method_3 #> # A tibble: 202 × 4 #>        FAR     HR method              level #>      <dbl>  <dbl> <chr>               <dbl> #>  1 0       0      resampling_cases_50   0.9 #>  2 0.00928 0.0107 resampling_cases_50   0.9 #>  3 0.0186  0.0213 resampling_cases_50   0.9 #>  4 0.0278  0.0320 resampling_cases_50   0.9 #>  5 0.0371  0.0427 resampling_cases_50   0.9 #>  6 0.0464  0.0533 resampling_cases_50   0.9 #>  7 0.0557  0.0640 resampling_cases_50   0.9 #>  8 0.0649  0.0747 resampling_cases_50   0.9 #>  9 0.0742  0.0853 resampling_cases_50   0.9 #> 10 0.0835  0.0960 resampling_cases_50   0.9 #> # ℹ 192 more rows #>"},{"path":"https://aijordan.github.io/triptych/reference/resampling_cases.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrap case resampling for triptych objects — resampling_cases.triptych_murphy","title":"Bootstrap case resampling for triptych objects — resampling_cases.triptych_murphy","text":"Bootstrap case resampling triptych objects","code":""},{"path":"https://aijordan.github.io/triptych/reference/resampling_cases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrap case resampling for triptych objects — resampling_cases.triptych_murphy","text":"","code":"# S3 method for triptych_murphy resampling_cases(x, level = 0.9, n_boot = 1000, ...)  # S3 method for triptych_reliability resampling_cases(x, level = 0.9, n_boot = 1000, ...)  resampling_cases(x, level = 0.9, n_boot = 1000, ...)  # S3 method for triptych_roc resampling_cases(x, level = 0.9, n_boot = 1000, ...)"},{"path":"https://aijordan.github.io/triptych/reference/resampling_cases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrap case resampling for triptych objects — resampling_cases.triptych_murphy","text":"x One triptych objects. level single value determines quantiles bootstrap sample return. quantiles envelop level * n_boot bootstrap draws. n_boot number bootstrap samples. ... Additional arguments passed methods.","code":""},{"path":"https://aijordan.github.io/triptych/reference/resampling_cases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootstrap case resampling for triptych objects — resampling_cases.triptych_murphy","text":"list tibbles contain information draw confidence regions. length equal number forecasting methods x.","code":""},{"path":"https://aijordan.github.io/triptych/reference/resampling_cases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bootstrap case resampling for triptych objects — resampling_cases.triptych_murphy","text":"","code":"# Triptych construction forecasts <- matrix(runif(300), ncol = 3) colnames(forecasts) <- c(\"Method_1\", \"Method_2\", \"Method_3\") observations <- rbinom(100, 1, forecasts[, 1]) tr <- triptych(forecasts, observations)  resampling_cases(tr$murphy, n_boot = 50) #> $Method_1 #> # A tibble: 1,000 × 5 #>    threshold    lower   upper method              level #>        <dbl>    <dbl>   <dbl> <chr>               <dbl> #>  1   0       0        0       resampling_cases_50   0.9 #>  2   0.00100 0.000881 0.00122 resampling_cases_50   0.9 #>  3   0.00200 0.00176  0.00244 resampling_cases_50   0.9 #>  4   0.00300 0.00264  0.00366 resampling_cases_50   0.9 #>  5   0.00400 0.00352  0.00488 resampling_cases_50   0.9 #>  6   0.00501 0.00440  0.00611 resampling_cases_50   0.9 #>  7   0.00601 0.00529  0.00733 resampling_cases_50   0.9 #>  8   0.00701 0.00617  0.00855 resampling_cases_50   0.9 #>  9   0.00801 0.00705  0.00977 resampling_cases_50   0.9 #> 10   0.00901 0.00793  0.0110  resampling_cases_50   0.9 #> # ℹ 990 more rows #>  #> $Method_2 #> # A tibble: 1,000 × 5 #>    threshold    lower  upper method              level #>        <dbl>    <dbl>  <dbl> <chr>               <dbl> #>  1   0       0        0      resampling_cases_50   0.9 #>  2   0.00100 0.000941 0.0413 resampling_cases_50   0.9 #>  3   0.00200 0.00188  0.0426 resampling_cases_50   0.9 #>  4   0.00300 0.00282  0.0438 resampling_cases_50   0.9 #>  5   0.00400 0.00376  0.0451 resampling_cases_50   0.9 #>  6   0.00501 0.00470  0.0464 resampling_cases_50   0.9 #>  7   0.00601 0.00565  0.0477 resampling_cases_50   0.9 #>  8   0.00701 0.00659  0.0490 resampling_cases_50   0.9 #>  9   0.00801 0.00753  0.0503 resampling_cases_50   0.9 #> 10   0.00901 0.00847  0.0515 resampling_cases_50   0.9 #> # ℹ 990 more rows #>  #> $Method_3 #> # A tibble: 1,000 × 5 #>    threshold    lower   upper method              level #>        <dbl>    <dbl>   <dbl> <chr>               <dbl> #>  1   0       0        0       resampling_cases_50   0.9 #>  2   0.00100 0.000861 0.00120 resampling_cases_50   0.9 #>  3   0.00200 0.00172  0.00240 resampling_cases_50   0.9 #>  4   0.00300 0.00258  0.00360 resampling_cases_50   0.9 #>  5   0.00400 0.00344  0.00480 resampling_cases_50   0.9 #>  6   0.00501 0.00440  0.0650  resampling_cases_50   0.9 #>  7   0.00601 0.00529  0.0660  resampling_cases_50   0.9 #>  8   0.00701 0.00617  0.0670  resampling_cases_50   0.9 #>  9   0.00801 0.00705  0.0680  resampling_cases_50   0.9 #> 10   0.00901 0.00793  0.0690  resampling_cases_50   0.9 #> # ℹ 990 more rows #>  resampling_cases(tr$reliability, n_boot = 50) #> $Method_1 #> # A tibble: 100 × 5 #>         x lower upper method              level #>     <dbl> <dbl> <dbl> <chr>               <dbl> #>  1 0.0322     0     0 resampling_cases_50   0.9 #>  2 0.0325     0     0 resampling_cases_50   0.9 #>  3 0.0562     0     0 resampling_cases_50   0.9 #>  4 0.0574     0     0 resampling_cases_50   0.9 #>  5 0.101      0     0 resampling_cases_50   0.9 #>  6 0.111      0     0 resampling_cases_50   0.9 #>  7 0.112      0     0 resampling_cases_50   0.9 #>  8 0.116      0     0 resampling_cases_50   0.9 #>  9 0.122      0     0 resampling_cases_50   0.9 #> 10 0.123      0     0 resampling_cases_50   0.9 #> # ℹ 90 more rows #>  #> $Method_2 #> # A tibble: 100 × 5 #>           x lower upper method              level #>       <dbl> <dbl> <dbl> <chr>               <dbl> #>  1 0.000329 0.111 0.455 resampling_cases_50   0.9 #>  2 0.00980  0     0.417 resampling_cases_50   0.9 #>  3 0.0110   0     0.417 resampling_cases_50   0.9 #>  4 0.0167   0     0.455 resampling_cases_50   0.9 #>  5 0.0190   0     0.455 resampling_cases_50   0.9 #>  6 0.0192   0     0.455 resampling_cases_50   0.9 #>  7 0.0243   0     0.455 resampling_cases_50   0.9 #>  8 0.0304   0     0.455 resampling_cases_50   0.9 #>  9 0.0368   0     0.48  resampling_cases_50   0.9 #> 10 0.0390   0.143 0.534 resampling_cases_50   0.9 #> # ℹ 90 more rows #>  #> $Method_3 #> # A tibble: 100 × 5 #>           x  lower upper method              level #>       <dbl>  <dbl> <dbl> <chr>               <dbl> #>  1 0.000904 0      0     resampling_cases_50   0.9 #>  2 0.00448  0.0298 0.444 resampling_cases_50   0.9 #>  3 0.0159   0      0.444 resampling_cases_50   0.9 #>  4 0.0249   0.0365 0.455 resampling_cases_50   0.9 #>  5 0.0258   0.0404 0.455 resampling_cases_50   0.9 #>  6 0.0267   0.2    0.455 resampling_cases_50   0.9 #>  7 0.0460   0.2    0.455 resampling_cases_50   0.9 #>  8 0.0653   0.2    0.455 resampling_cases_50   0.9 #>  9 0.0735   0.2    0.455 resampling_cases_50   0.9 #> 10 0.0774   0.2    0.455 resampling_cases_50   0.9 #> # ℹ 90 more rows #>  resampling_cases(tr$roc, n_boot = 50) #> $Method_1 #> # A tibble: 202 × 4 #>      FAR     HR method              level #>    <dbl>  <dbl> <chr>               <dbl> #>  1     0 0      resampling_cases_50   0.9 #>  2     0 0.0213 resampling_cases_50   0.9 #>  3     0 0.0426 resampling_cases_50   0.9 #>  4     0 0.0638 resampling_cases_50   0.9 #>  5     0 0.0851 resampling_cases_50   0.9 #>  6     0 0.106  resampling_cases_50   0.9 #>  7     0 0.128  resampling_cases_50   0.9 #>  8     0 0.149  resampling_cases_50   0.9 #>  9     0 0.170  resampling_cases_50   0.9 #> 10     0 0.191  resampling_cases_50   0.9 #> # ℹ 192 more rows #>  #> $Method_2 #> # A tibble: 202 × 4 #>        FAR     HR method              level #>      <dbl>  <dbl> <chr>               <dbl> #>  1 0       0      resampling_cases_50   0.9 #>  2 0.00941 0.0107 resampling_cases_50   0.9 #>  3 0.0188  0.0213 resampling_cases_50   0.9 #>  4 0.0282  0.0320 resampling_cases_50   0.9 #>  5 0.0377  0.0426 resampling_cases_50   0.9 #>  6 0.0471  0.0533 resampling_cases_50   0.9 #>  7 0.0565  0.0640 resampling_cases_50   0.9 #>  8 0.0659  0.0746 resampling_cases_50   0.9 #>  9 0.0753  0.0853 resampling_cases_50   0.9 #> 10 0.0847  0.0959 resampling_cases_50   0.9 #> # ℹ 192 more rows #>  #> $Method_3 #> # A tibble: 202 × 4 #>        FAR     HR method              level #>      <dbl>  <dbl> <chr>               <dbl> #>  1 0       0      resampling_cases_50   0.9 #>  2 0.00963 0.0104 resampling_cases_50   0.9 #>  3 0.0193  0.0208 resampling_cases_50   0.9 #>  4 0.0289  0.0312 resampling_cases_50   0.9 #>  5 0.0385  0.0416 resampling_cases_50   0.9 #>  6 0.0482  0.0521 resampling_cases_50   0.9 #>  7 0.0578  0.0625 resampling_cases_50   0.9 #>  8 0.0674  0.0729 resampling_cases_50   0.9 #>  9 0.0771  0.0833 resampling_cases_50   0.9 #> 10 0.0867  0.0937 resampling_cases_50   0.9 #> # ℹ 192 more rows #>"},{"path":"https://aijordan.github.io/triptych/reference/roc.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluation of forecasts using ROC curves — roc","title":"Evaluation of forecasts using ROC curves — roc","text":"ROC curve visualizes discrimination ability displaying hit rate false alarm rate threshold values.","code":""},{"path":"https://aijordan.github.io/triptych/reference/roc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluation of forecasts using ROC curves — roc","text":"","code":"roc(x, y = NULL, concave = TRUE, ...)  as_roc(x, r)"},{"path":"https://aijordan.github.io/triptych/reference/roc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluation of forecasts using ROC curves — roc","text":"x data frame, list, matrix, object can coerced tibble. Contains numeric forecasts. y numeric vector observations. missing, column name \"y\" must present tibble coerced x. concave boolean value indicating whether calculate concave hull raw ROC diagnostic. ... Unused. r reference triptych_mcbdsc object whose attributes used casting.","code":""},{"path":"https://aijordan.github.io/triptych/reference/roc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluation of forecasts using ROC curves — roc","text":"triptych_roc object, vctrs_vctr subclass, length equal number forecasting methods supplied x. entry named according corresponding forecasting method, contains list named objects: estimate: data frame hit rates false rates. region: Either empty list, data frame pointwise confidence intervals (along diagonal lines slope \\(-\\pi_0/\\pi_1\\)) added add_confidence(). x: numeric vector original forecasts. Access convenient estimates(), regions(), forecasts().","code":""},{"path":[]},{"path":"https://aijordan.github.io/triptych/reference/roc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluation of forecasts using ROC curves — roc","text":"","code":"# Construction forecasts <- matrix(runif(300), ncol = 3) colnames(forecasts) <- c(\"Method_1\", \"Method_2\", \"Method_3\") observations <- rbinom(100, 1, forecasts[, 1]) roc1 <- roc(forecasts, observations)  pred_obs <- tibble::tibble(M1 = runif(100), y = rbinom(100, 1, M1)) roc2 <- roc(pred_obs)  # Visualization autoplot(roc1)   library(ggplot2) df_est <- estimates(roc1) ggplot(df_est) +   geom_segment(aes(x = 0, y = 0, xend = 1, yend = 1)) +   geom_path(aes(x = FAR, y = HR, col = forecast)) +   labs(x = \"False alarm rate\", y = \"Hit rate\")"},{"path":"https://aijordan.github.io/triptych/reference/triptych-vctrs.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal vctrs methods — triptych-vctrs","title":"Internal vctrs methods — triptych-vctrs","text":"Internal vctrs methods","code":""},{"path":"https://aijordan.github.io/triptych/reference/triptych.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluation of forecasts using a Triptych — triptych","title":"Evaluation of forecasts using a Triptych — triptych","text":"triptych visualizes three important aspects predictive performance: Economic utility via Murphy curves, miscalibration via reliability curves, discrimination ability via ROC curves. triptych S3 class plotting methods ggplot2.","code":""},{"path":"https://aijordan.github.io/triptych/reference/triptych.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluation of forecasts using a Triptych — triptych","text":"","code":"triptych(x, y = NULL, ...)"},{"path":"https://aijordan.github.io/triptych/reference/triptych.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluation of forecasts using a Triptych — triptych","text":"x data frame, list, matrix, object can coerced tibble. Contains numeric forecasts. y numeric vector observations. missing, column name \"y\" must present tibble coerced x. ... Additional arguments passed murphy(), reliability(), roc(), mcbdsc().","code":""},{"path":"https://aijordan.github.io/triptych/reference/triptych.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluation of forecasts using a Triptych — triptych","text":"triptych object, tibble subclass, contains five columns: forecast: Contains names. murphy: Contains vctrs_vctr subclass Murphy curves. reliability: Contains vctrs_vctr subclass reliability curves. roc: Contains vctrs_vctr subclass ROC curves. mcbdsc: Contains vctrs_vctr subclass score decompositions.","code":""},{"path":[]},{"path":"https://aijordan.github.io/triptych/reference/triptych.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluation of forecasts using a Triptych — triptych","text":"","code":"# Construction forecasts <- matrix(runif(300), ncol = 3) colnames(forecasts) <- c(\"Method_1\", \"Method_2\", \"Method_3\") observations <- rbinom(100, 1, forecasts[, 1]) tr <- triptych(forecasts, observations)  pred_obs <- tibble::tibble(M1 = runif(100), y = rbinom(100, 1, M1)) tr <- triptych(pred_obs)  # Visualization autoplot(tr)   # Consistency bands (for reliability curves) tr <- add_consistency(tr, level = 0.9, n_boot = 100) autoplot(tr)"},{"path":"https://aijordan.github.io/triptych/news/index.html","id":"triptych-010","dir":"Changelog","previous_headings":"","what":"triptych 0.1.0","title":"triptych 0.1.0","text":"Initial CRAN submission.","code":""}]
