[{"path":"https://aijordan.github.io/triptych/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 triptych authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://aijordan.github.io/triptych/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Timo Dimitriadis. Author. Alexander . Jordan. Author, maintainer.","code":""},{"path":"https://aijordan.github.io/triptych/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Dimitriadis T, Jordan AI (2023). triptych: Diagnostic Graphics Evaluate Forecast Performance. https://github.com/aijordan/triptych/, https://aijordan.github.io/triptych/.","code":"@Manual{,   title = {triptych: Diagnostic Graphics to Evaluate Forecast Performance},   author = {Timo Dimitriadis and Alexander I. Jordan},   year = {2023},   note = {https://github.com/aijordan/triptych/, https://aijordan.github.io/triptych/}, }"},{"path":"https://aijordan.github.io/triptych/index.html","id":"triptych--diagnostic-graphics-to-evaluate-forecast-performance","dir":"","previous_headings":"","what":"Diagnostic Graphics to Evaluate Forecast Performance","title":"Diagnostic Graphics to Evaluate Forecast Performance","text":"Overall predictive performance measured mean score (loss), decomposes miscalibration, discrimination, uncertainty components. main focus visualization distinct complementary aspects joint displays. See Dimitriadis, Gneiting, Jordan, Vogel (2023) arXiv:2301.10803.","code":""},{"path":"https://aijordan.github.io/triptych/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Diagnostic Graphics to Evaluate Forecast Performance","text":"(Soon) Install latest release triptych CRAN : Install development version triptych :","code":"install.packages(\"triptych\") # install.packages(\"devtools\") devtools::install_github(\"aijordan/triptych\")"},{"path":"https://aijordan.github.io/triptych/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Diagnostic Graphics to Evaluate Forecast Performance","text":"","code":"library(triptych) data(ex_binary, package = \"triptych\") set.seed(20230921)  # Construct and inspect tr <- triptych(ex_binary) # or: tr <- triptych(ex_binary[2:11], ex_binary[1]) tr #> # A tibble: 10 × 5 #>    forecast          murphy     reliability             roc          mcbdsc #>    <chr>         <trpt_mur>      <trpt_rel>      <trpt_roc>   <trpt_mcbdsc> #>  1 X01      <named list[3]> <named list[3]> <named list[3]> <named list[3]> #>  2 X02      <named list[3]> <named list[3]> <named list[3]> <named list[3]> #>  3 X03      <named list[3]> <named list[3]> <named list[3]> <named list[3]> #>  4 X04      <named list[3]> <named list[3]> <named list[3]> <named list[3]> #>  5 X05      <named list[3]> <named list[3]> <named list[3]> <named list[3]> #>  6 X06      <named list[3]> <named list[3]> <named list[3]> <named list[3]> #>  7 X07      <named list[3]> <named list[3]> <named list[3]> <named list[3]> #>  8 X08      <named list[3]> <named list[3]> <named list[3]> <named list[3]> #>  9 X09      <named list[3]> <named list[3]> <named list[3]> <named list[3]> #> 10 X10      <named list[3]> <named list[3]> <named list[3]> <named list[3]> class(tr) #> [1] \"triptych\"   \"tbl_df\"     \"tbl\"        \"data.frame\"  # 1. Choose 4 predictions # 2. Add consistency bands (for reliability curves) # 3. Create patchwork object # 4. Adjust the title of the legend dplyr::slice(tr, 1, 3, 6, 9) |>   add_consistency(level = 0.9, n_boot = 100) |>   autoplot() &   ggplot2::guides(colour = ggplot2::guide_legend(\"Forecast\")) # From existing triptych object estimates(tr$mcbdsc) #> # A tibble: 10 × 5 #>    forecast mean_score     MCB    DSC   UNC #>    <chr>         <dbl>   <dbl>  <dbl> <dbl> #>  1 X01          0.0827 0.00474 0.172  0.250 #>  2 X02          0.127  0.0233  0.146  0.250 #>  3 X03          0.134  0.0172  0.132  0.250 #>  4 X04          0.194  0.0587  0.114  0.250 #>  5 X05          0.222  0.0723  0.100  0.250 #>  6 X06          0.180  0.00494 0.0748 0.250 #>  7 X07          0.212  0.0211  0.0590 0.250 #>  8 X08          0.235  0.0263  0.0410 0.250 #>  9 X09          0.303  0.0818  0.0282 0.250 #> 10 X10          0.312  0.0772  0.0148 0.250 autoplot(tr$mcbdsc) # Or standalone: # mcbdsc(ex_binary) |> estimates() # mcbdsc(ex_binary) |> autoplot()"},{"path":"https://aijordan.github.io/triptych/reference/accessors.html","id":null,"dir":"Reference","previous_headings":"","what":"Accessing original forecast and observation data for triptych objects — accessors","title":"Accessing original forecast and observation data for triptych objects — accessors","text":"Accessing original forecast observation data triptych objects","code":""},{"path":"https://aijordan.github.io/triptych/reference/accessors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accessing original forecast and observation data for triptych objects — accessors","text":"","code":"forecasts(x, ...)  observations(x, ...)"},{"path":"https://aijordan.github.io/triptych/reference/accessors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accessing original forecast and observation data for triptych objects — accessors","text":"x object relevant information extracted. ... Additional arguments passed methods.","code":""},{"path":"https://aijordan.github.io/triptych/reference/accessors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accessing original forecast and observation data for triptych objects — accessors","text":"forecasts(): tibble original forecasts long format. observations(): vector observations.","code":""},{"path":[]},{"path":"https://aijordan.github.io/triptych/reference/add_confidence.html","id":null,"dir":"Reference","previous_headings":"","what":"Adding confidence regions — add_confidence","title":"Adding confidence regions — add_confidence","text":"Adding confidence regions","code":""},{"path":"https://aijordan.github.io/triptych/reference/add_confidence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adding confidence regions — add_confidence","text":"","code":"add_confidence(x, level, ...)"},{"path":"https://aijordan.github.io/triptych/reference/add_confidence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adding confidence regions — add_confidence","text":"x object confidence region added. level single value level confidence. ... Additional arguments passed methods.","code":""},{"path":"https://aijordan.github.io/triptych/reference/add_consistency.html","id":null,"dir":"Reference","previous_headings":"","what":"Adding consistency regions — add_consistency","title":"Adding consistency regions — add_consistency","text":"Adding consistency regions","code":""},{"path":"https://aijordan.github.io/triptych/reference/add_consistency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adding consistency regions — add_consistency","text":"","code":"add_consistency(x, level, ...)"},{"path":"https://aijordan.github.io/triptych/reference/add_consistency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adding consistency regions — add_consistency","text":"x object consistency region added. level single value level confidence. ... Additional arguments passed methods.","code":""},{"path":"https://aijordan.github.io/triptych/reference/estimates.html","id":null,"dir":"Reference","previous_headings":"","what":"Accessing diagnostic estimate data — estimates.triptych_mcbdsc","title":"Accessing diagnostic estimate data — estimates.triptych_mcbdsc","text":"Accessing diagnostic estimate data","code":""},{"path":"https://aijordan.github.io/triptych/reference/estimates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accessing diagnostic estimate data — estimates.triptych_mcbdsc","text":"","code":"# S3 method for triptych_mcbdsc estimates(x, ...)  # S3 method for triptych_murphy estimates(x, at = NULL, ...)  estimates(x, at, ...)  # S3 method for triptych_reliability estimates(x, at = NULL, ...)  # S3 method for triptych_roc estimates(x, at = NULL, p1 = mean(observations(x)), ...)"},{"path":"https://aijordan.github.io/triptych/reference/estimates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accessing diagnostic estimate data — estimates.triptych_mcbdsc","text":"x object estimate information extracted. ... Additional arguments passed methods. vector thresholds x evaluated. p1 unconditional event probability. Used combination determine diagonal lines along determine estimate.","code":""},{"path":"https://aijordan.github.io/triptych/reference/estimates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accessing diagnostic estimate data — estimates.triptych_mcbdsc","text":"tibble relevant information describing diagnostic estimate (Murphy curve, reliability curve, ROC curve, score decomposition) supplied forecasting methods.","code":""},{"path":[]},{"path":"https://aijordan.github.io/triptych/reference/ex_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Example data set of binary observations and probability forecasts — ex_binary","title":"Example data set of binary observations and probability forecasts — ex_binary","text":"detailed explanation simulation setting...","code":""},{"path":"https://aijordan.github.io/triptych/reference/ex_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example data set of binary observations and probability forecasts — ex_binary","text":"","code":"ex_binary"},{"path":[]},{"path":"https://aijordan.github.io/triptych/reference/ex_binary.html","id":"ex-binary","dir":"Reference","previous_headings":"","what":"ex_binary","title":"Example data set of binary observations and probability forecasts — ex_binary","text":"data frame 1,000 rows 11 columns: y observations X01 forecasts specified X02 forecasts specified X03 forecasts specified X04 forecasts specified X05 forecasts specified X06 forecasts specified X07 forecasts specified X08 forecasts specified X09 forecasts specified X10 forecasts specified ","code":""},{"path":"https://aijordan.github.io/triptych/reference/mcbdsc.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluation of forecasts using score decompositions — mcbdsc","title":"Evaluation of forecasts using score decompositions — mcbdsc","text":"score decomposition splits mean score three components miscalibration (MCB), discrimination (DSC), uncertainty (UNC). Plotting DSC component MCB component allows quick visual inspection predictive performance many forecasting methods.","code":""},{"path":"https://aijordan.github.io/triptych/reference/mcbdsc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluation of forecasts using score decompositions — mcbdsc","text":"","code":"mcbdsc(x, y = NULL, score = \"Brier_score\", ...)  as_mcbdsc(x, r)"},{"path":"https://aijordan.github.io/triptych/reference/mcbdsc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluation of forecasts using score decompositions — mcbdsc","text":"x data frame, list, matrix, object can coerced tibble. Contains numeric forecasts. y numeric vector observations. missing, column name \"y\" must present tibble coerced x. score string specifying score function. One : \"Brier_score\" (default), \"log_score\", \"MR_score\". ... Unused. r reference triptych_mcbdsc object whose attributes used casting.","code":""},{"path":"https://aijordan.github.io/triptych/reference/mcbdsc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluation of forecasts using score decompositions — mcbdsc","text":"triptych_mcbdsc object, vctrs_vctr subclass, length equal number forecasting methods supplied x. entry named according corresponding forecasting method, contains list named objects: estimate: data frame score decomposition. region: Either empty list, (yet determined) object added add_confidence(). x: numeric vector original forecasts. Access convenient estimates(), regions(), forecasts().","code":""},{"path":[]},{"path":"https://aijordan.github.io/triptych/reference/mcbdsc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluation of forecasts using score decompositions — mcbdsc","text":"","code":"#' data(ex_binary, package = \"triptych\") # Construct and inspect md <- mcbdsc(ex_binary) # or: md <- reliability(ex_binary[2:11], ex_binary[1]) md #> <triptych_mcbdsc[10]> #>             X01             X02             X03             X04             X05  #> <named list[3]> <named list[3]> <named list[3]> <named list[3]> <named list[3]>  #>             X06             X07             X08             X09             X10  #> <named list[3]> <named list[3]> <named list[3]> <named list[3]> <named list[3]>  class(md) #> [1] \"triptych_mcbdsc\" \"vctrs_vctr\"      \"list\"             # Visualize autoplot(md)   # Show score decomposition estimates(md) #> # A tibble: 10 × 5 #>    forecast mean_score     MCB    DSC   UNC #>    <chr>         <dbl>   <dbl>  <dbl> <dbl> #>  1 X01          0.0827 0.00474 0.172  0.250 #>  2 X02          0.127  0.0233  0.146  0.250 #>  3 X03          0.134  0.0172  0.132  0.250 #>  4 X04          0.194  0.0587  0.114  0.250 #>  5 X05          0.222  0.0723  0.100  0.250 #>  6 X06          0.180  0.00494 0.0748 0.250 #>  7 X07          0.212  0.0211  0.0590 0.250 #>  8 X08          0.235  0.0263  0.0410 0.250 #>  9 X09          0.303  0.0818  0.0282 0.250 #> 10 X10          0.312  0.0772  0.0148 0.250"},{"path":"https://aijordan.github.io/triptych/reference/murphy.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluation of forecasts using Murphy curves — murphy","title":"Evaluation of forecasts using Murphy curves — murphy","text":"Murphy curve visualizes economic utility displaying mean elementary scores across threshold values.","code":""},{"path":"https://aijordan.github.io/triptych/reference/murphy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluation of forecasts using Murphy curves — murphy","text":"","code":"murphy(x, y = NULL, ref = NULL, ...)  as_murphy(x, r)"},{"path":"https://aijordan.github.io/triptych/reference/murphy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluation of forecasts using Murphy curves — murphy","text":"x data frame, list, matrix, object can coerced tibble. Contains numeric forecasts. y numeric vector observations. missing, column name \"y\" must present tibble coerced x. ref numeric vector reference forecasts. Can also supplied column name \"ref\" tibble coerced x. ... Unused. r reference triptych_murphy object whose attributes used casting.","code":""},{"path":"https://aijordan.github.io/triptych/reference/murphy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluation of forecasts using Murphy curves — murphy","text":"triptych_murphy object, vctrs_vctr subclass, length equal number forecasting methods supplied x. entry named according corresponding forecasting method, contains list named objects: estimate: data frame threshold corresponding mean score values. region: Either empty list, data frame point confidence intervals added add_confidence(). x: numeric vector original forecasts. Access convenient estimates(), regions(), forecasts().","code":""},{"path":[]},{"path":"https://aijordan.github.io/triptych/reference/murphy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluation of forecasts using Murphy curves — murphy","text":"","code":"data(ex_binary, package = \"triptych\") # Construct and inspect mr <- murphy(ex_binary) # or: mr <- murphy(ex_binary[2:11], ex_binary[1]) mr #> <triptych_murphy[10]> #>             X01             X02             X03             X04             X05  #> <named list[3]> <named list[3]> <named list[3]> <named list[3]> <named list[3]>  #>             X06             X07             X08             X09             X10  #> <named list[3]> <named list[3]> <named list[3]> <named list[3]> <named list[3]>  class(mr) #> [1] \"triptych_murphy\" \"vctrs_vctr\"      \"list\"             # 1. Choose 4 predictions # 2. Visualize # 3. Adjust the title of the legend mr[c(1, 3, 6, 9)] |>   autoplot() +   ggplot2::guides(colour = ggplot2::guide_legend(\"Forecast\"))     # Build yourself using accessors library(ggplot2) df_est <- estimates(mr[c(1, 3, 6, 9)]) ggplot(df_est) +   geom_path(aes(x = knot, y = mean_score, col = forecast))"},{"path":"https://aijordan.github.io/triptych/reference/plot.triptych.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot methods for the triptych classes — plot.triptych","title":"Plot methods for the triptych classes — plot.triptych","text":"Plot methods triptych classes","code":""},{"path":"https://aijordan.github.io/triptych/reference/plot.triptych.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot methods for the triptych classes — plot.triptych","text":"","code":"# S3 method for triptych plot(x, ...)  # S3 method for triptych autoplot(object, ...)  # S3 method for triptych_murphy plot(x, ...)  # S3 method for triptych_murphy autoplot(object, ...)  # S3 method for triptych_reliability plot(x, ...)  # S3 method for triptych_reliability autoplot(object, ..., breaks = seq(0, 1, length.out = 11))  # S3 method for triptych_roc plot(x, ...)  # S3 method for triptych_roc autoplot(object, ...)  # S3 method for triptych_mcbdsc plot(x, ...)  # S3 method for triptych_mcbdsc autoplot(   object,   ...,   n_isolines = 10,   colour_values = \"black\",   colour_unc = \"#00BF7D\",   MCBDSC_repel = FALSE,   MCB_lim = NA,   DSC_lim = NA )"},{"path":"https://aijordan.github.io/triptych/reference/plot.triptych.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot methods for the triptych classes — plot.triptych","text":"x object inherits one triptych classes. ... Arguments passed autoplot.triptych() methods triptych classes. object object inherits one triptych classes. breaks vector bin boundaries geom_histogram() layer. Set NA disable. n_isolines number isolines showing mean scores. colour_values colour specification passed values argument scale_colour_manual(). Recycled length 1. colour_unc colour specification highlighting UNC component layers. MCBDSC_repel boolean value indicating whether labels placed ggrepel package. MCB_lim plot limits x-axis (MCB component). DSC_lim plot limits y-axis (DSC component).","code":""},{"path":"https://aijordan.github.io/triptych/reference/plot.triptych.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot methods for the triptych classes — plot.triptych","text":"object class 'triptych': patchwork object (invisibly). triptych objects: ggplot object (invisibly). Every plot() method wraps corresponding autoplot() method, followed explicit print() call. , always draws plot, even assignment within loop.","code":""},{"path":"https://aijordan.github.io/triptych/reference/plot.triptych.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot methods for the triptych classes — plot.triptych","text":"","code":"forecasts <- matrix(runif(300), ncol = 3) colnames(forecasts) <- c(\"Method_1\", \"Method_2\", \"Method_3\") observations <- rbinom(100, 1, forecasts[, 1]) tr <- triptych(forecasts, observations)  autoplot(tr)  autoplot(tr$murphy)  autoplot(tr$reliability)  autoplot(tr$roc)  autoplot(tr$mcbdsc)"},{"path":"https://aijordan.github.io/triptych/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. ggplot2 autoplot","code":""},{"path":"https://aijordan.github.io/triptych/reference/regions.html","id":null,"dir":"Reference","previous_headings":"","what":"Accessing confidence/consistency region data — regions.triptych_mcbdsc","title":"Accessing confidence/consistency region data — regions.triptych_mcbdsc","text":"Accessing confidence/consistency region data","code":""},{"path":"https://aijordan.github.io/triptych/reference/regions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accessing confidence/consistency region data — regions.triptych_mcbdsc","text":"","code":"# S3 method for triptych_mcbdsc regions(x, ...)  # S3 method for triptych_murphy regions(x, ...)  regions(x, ...)  # S3 method for triptych_reliability regions(x, ...)  # S3 method for triptych_roc regions(x, ...)"},{"path":"https://aijordan.github.io/triptych/reference/regions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accessing confidence/consistency region data — regions.triptych_mcbdsc","text":"x object region information extracted. ... Additional arguments passed methods.","code":""},{"path":"https://aijordan.github.io/triptych/reference/regions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accessing confidence/consistency region data — regions.triptych_mcbdsc","text":"tibble relevant information uncertainty quantification chosen diagnostic (Murphy curve, reliability curve, ROC curve, score decomposition) supplied forecasting methods.","code":""},{"path":[]},{"path":"https://aijordan.github.io/triptych/reference/reliability.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluation of forecasts using reliability curves — reliability","title":"Evaluation of forecasts using reliability curves — reliability","text":"reliability curve visualizes miscalibration displaying (isotonic) conditional event probability forecast value.","code":""},{"path":"https://aijordan.github.io/triptych/reference/reliability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluation of forecasts using reliability curves — reliability","text":"","code":"reliability(x, y = NULL, ...)  as_reliability(x, r)"},{"path":"https://aijordan.github.io/triptych/reference/reliability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluation of forecasts using reliability curves — reliability","text":"x data frame, list, matrix, object can coerced tibble. Contains numeric forecasts. y numeric vector observations. missing, column name \"y\" must present tibble coerced x. ... Unused. r reference triptych_mcbdsc object whose attributes used casting.","code":""},{"path":"https://aijordan.github.io/triptych/reference/reliability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluation of forecasts using reliability curves — reliability","text":"triptych_reliability object, vctrs_vctr subclass, length equal number forecasting methods supplied x. entry named according corresponding forecasting method, contains list named objects: estimate: data frame isotonic regression estimate. region: Either empty list, data frame pointwise consistency confidence intervals added add_consistency() add_confidence(), respectively. x: numeric vector original forecasts. Access convenient estimates(), regions(), forecasts().","code":""},{"path":[]},{"path":"https://aijordan.github.io/triptych/reference/reliability.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluation of forecasts using reliability curves — reliability","text":"","code":"data(ex_binary, package = \"triptych\") # Construct and inspect rel <- reliability(ex_binary) # or: rel <- reliability(ex_binary[2:11], ex_binary[1]) rel #> <triptych_reliability[10]> #>             X01             X02             X03             X04             X05  #> <named list[3]> <named list[3]> <named list[3]> <named list[3]> <named list[3]>  #>             X06             X07             X08             X09             X10  #> <named list[3]> <named list[3]> <named list[3]> <named list[3]> <named list[3]>  class(rel) #> [1] \"triptych_reliability\" \"vctrs_vctr\"           \"list\"                  # 1. Choose 4 predictions # 2. Visualize # 3. Adjust the title of the legend rel[c(1, 3, 6, 9)] |>   autoplot() +   ggplot2::guides(colour = ggplot2::guide_legend(\"Forecast\"))     # Build yourself using accessors library(ggplot2) df_est <- estimates(rel[c(1, 3, 6, 9)]) ggplot(df_est, aes(x = x, y = CEP, col = forecast)) +   geom_segment(aes(x = 0, y = 0, xend = 1, yend = 1)) +   geom_path()"},{"path":"https://aijordan.github.io/triptych/reference/resampling_Bernoulli.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrap observation resampling for triptych objects — resampling_Bernoulli.triptych_murphy","title":"Bootstrap observation resampling for triptych objects — resampling_Bernoulli.triptych_murphy","text":"Bootstrap observation resampling triptych objects","code":""},{"path":"https://aijordan.github.io/triptych/reference/resampling_Bernoulli.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrap observation resampling for triptych objects — resampling_Bernoulli.triptych_murphy","text":"","code":"# S3 method for triptych_murphy resampling_Bernoulli(x, level = 0.9, n_boot = 1000, ...)  # S3 method for triptych_reliability resampling_Bernoulli(   x,   level = 0.9,   n_boot = 1000,   position = c(\"diagonal\", \"estimate\"),   ... )  resampling_Bernoulli(x, level = 0.9, n_boot = 1000, ...)  # S3 method for triptych_roc resampling_Bernoulli(x, level = 0.9, n_boot = 1000, ...)"},{"path":"https://aijordan.github.io/triptych/reference/resampling_Bernoulli.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrap observation resampling for triptych objects — resampling_Bernoulli.triptych_murphy","text":"x One triptych objects. level single value determines quantiles bootstrap sample return. quantiles envelop level * n_boot bootstrap draws. n_boot number bootstrap samples. ... Additional arguments passed methods. position Either \"estimate\" confidence regions, \"diagonal\" consistency regions.","code":""},{"path":"https://aijordan.github.io/triptych/reference/resampling_Bernoulli.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootstrap observation resampling for triptych objects — resampling_Bernoulli.triptych_murphy","text":"list tibbles contain information draw confidence regions. length equal number forecasting methods x.","code":""},{"path":"https://aijordan.github.io/triptych/reference/resampling_Bernoulli.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bootstrap observation resampling for triptych objects — resampling_Bernoulli.triptych_murphy","text":"","code":"# Triptych construction forecasts <- matrix(runif(300), ncol = 3) colnames(forecasts) <- c(\"Method_1\", \"Method_2\", \"Method_3\") observations <- rbinom(100, 1, forecasts[, 1]) tr <- triptych(forecasts, observations)  resampling_cases(tr$murphy, n_boot = 50) #> $Method_1 #> # A tibble: 1,000 × 5 #>    threshold    lower   upper method              level #>        <dbl>    <dbl>   <dbl> <chr>               <dbl> #>  1   0       0        0       resampling_cases_50   0.9 #>  2   0.00100 0.000761 0.00110 resampling_cases_50   0.9 #>  3   0.00200 0.00152  0.00220 resampling_cases_50   0.9 #>  4   0.00300 0.00228  0.00330 resampling_cases_50   0.9 #>  5   0.00400 0.00304  0.00440 resampling_cases_50   0.9 #>  6   0.00501 0.00380  0.00551 resampling_cases_50   0.9 #>  7   0.00601 0.00456  0.00661 resampling_cases_50   0.9 #>  8   0.00701 0.00533  0.00771 resampling_cases_50   0.9 #>  9   0.00801 0.00609  0.00881 resampling_cases_50   0.9 #> 10   0.00901 0.00685  0.00991 resampling_cases_50   0.9 #> # ℹ 990 more rows #>  #> $Method_2 #> # A tibble: 1,000 × 5 #>    threshold    lower   upper method              level #>        <dbl>    <dbl>   <dbl> <chr>               <dbl> #>  1   0       0        0       resampling_cases_50   0.9 #>  2   0.00100 0.000761 0.00104 resampling_cases_50   0.9 #>  3   0.00200 0.00152  0.00208 resampling_cases_50   0.9 #>  4   0.00300 0.00228  0.00312 resampling_cases_50   0.9 #>  5   0.00400 0.00304  0.00416 resampling_cases_50   0.9 #>  6   0.00501 0.00380  0.00521 resampling_cases_50   0.9 #>  7   0.00601 0.00456  0.00625 resampling_cases_50   0.9 #>  8   0.00701 0.00533  0.00729 resampling_cases_50   0.9 #>  9   0.00801 0.00609  0.00833 resampling_cases_50   0.9 #> 10   0.00901 0.00685  0.00937 resampling_cases_50   0.9 #> # ℹ 990 more rows #>  #> $Method_3 #> # A tibble: 1,000 × 5 #>    threshold    lower   upper method              level #>        <dbl>    <dbl>   <dbl> <chr>               <dbl> #>  1   0       0        0       resampling_cases_50   0.9 #>  2   0.00100 0.000721 0.00112 resampling_cases_50   0.9 #>  3   0.00200 0.00144  0.00224 resampling_cases_50   0.9 #>  4   0.00300 0.00216  0.00336 resampling_cases_50   0.9 #>  5   0.00400 0.00288  0.00448 resampling_cases_50   0.9 #>  6   0.00501 0.00360  0.00541 resampling_cases_50   0.9 #>  7   0.00601 0.00432  0.00649 resampling_cases_50   0.9 #>  8   0.00701 0.00505  0.00757 resampling_cases_50   0.9 #>  9   0.00801 0.00577  0.00865 resampling_cases_50   0.9 #> 10   0.00901 0.00649  0.00973 resampling_cases_50   0.9 #> # ℹ 990 more rows #>  resampling_cases(tr$reliability, position = \"estimate\", n_boot = 50) #> $Method_1 #> # A tibble: 100 × 5 #>          x lower upper method              level #>      <dbl> <dbl> <dbl> <chr>               <dbl> #>  1 0.00855     0     0 resampling_cases_50   0.9 #>  2 0.0258      0     0 resampling_cases_50   0.9 #>  3 0.0289      0     0 resampling_cases_50   0.9 #>  4 0.0301      0     0 resampling_cases_50   0.9 #>  5 0.0403      0     0 resampling_cases_50   0.9 #>  6 0.0830      0     0 resampling_cases_50   0.9 #>  7 0.0838      0     0 resampling_cases_50   0.9 #>  8 0.0863      0     0 resampling_cases_50   0.9 #>  9 0.0875      0     0 resampling_cases_50   0.9 #> 10 0.106       0     0 resampling_cases_50   0.9 #> # ℹ 90 more rows #>  #> $Method_2 #> # A tibble: 100 × 5 #>         x lower upper method              level #>     <dbl> <dbl> <dbl> <chr>               <dbl> #>  1 0.0121 0     0     resampling_cases_50   0.9 #>  2 0.0123 0     0.571 resampling_cases_50   0.9 #>  3 0.0495 0     0.586 resampling_cases_50   0.9 #>  4 0.0534 0     0.586 resampling_cases_50   0.9 #>  5 0.0559 0.133 0.586 resampling_cases_50   0.9 #>  6 0.0615 0.2   0.586 resampling_cases_50   0.9 #>  7 0.0711 0.357 0.586 resampling_cases_50   0.9 #>  8 0.0747 0.357 0.586 resampling_cases_50   0.9 #>  9 0.0846 0.357 0.586 resampling_cases_50   0.9 #> 10 0.0863 0.357 0.586 resampling_cases_50   0.9 #> # ℹ 90 more rows #>  #> $Method_3 #> # A tibble: 100 × 5 #>          x  lower upper method              level #>      <dbl>  <dbl> <dbl> <chr>               <dbl> #>  1 0.00499 0      0     resampling_cases_50   0.9 #>  2 0.00919 0.0691 0.626 resampling_cases_50   0.9 #>  3 0.0181  0.216  0.626 resampling_cases_50   0.9 #>  4 0.0369  0.379  0.626 resampling_cases_50   0.9 #>  5 0.0379  0.379  0.626 resampling_cases_50   0.9 #>  6 0.0437  0.379  0.626 resampling_cases_50   0.9 #>  7 0.0479  0.379  0.626 resampling_cases_50   0.9 #>  8 0.0483  0.379  0.626 resampling_cases_50   0.9 #>  9 0.0514  0.379  0.626 resampling_cases_50   0.9 #> 10 0.0549  0.379  0.626 resampling_cases_50   0.9 #> # ℹ 90 more rows #>  resampling_cases(tr$roc, n_boot = 50) #> $Method_1 #> # A tibble: 202 × 4 #>         FAR     HR method              level #>       <dbl>  <dbl> <chr>               <dbl> #>  1 0        0      resampling_cases_50   0.9 #>  2 0.000889 0.0178 resampling_cases_50   0.9 #>  3 0.00194  0.0354 resampling_cases_50   0.9 #>  4 0.00397  0.0522 resampling_cases_50   0.9 #>  5 0.00599  0.0690 resampling_cases_50   0.9 #>  6 0.00801  0.0858 resampling_cases_50   0.9 #>  7 0.0100   0.103  resampling_cases_50   0.9 #>  8 0.0119   0.119  resampling_cases_50   0.9 #>  9 0.0137   0.136  resampling_cases_50   0.9 #> 10 0.0160   0.153  resampling_cases_50   0.9 #> # ℹ 192 more rows #>  #> $Method_2 #> # A tibble: 202 × 4 #>        FAR     HR method              level #>      <dbl>  <dbl> <chr>               <dbl> #>  1 0       0      resampling_cases_50   0.9 #>  2 0.00987 0.0101 resampling_cases_50   0.9 #>  3 0.0197  0.0202 resampling_cases_50   0.9 #>  4 0.0296  0.0303 resampling_cases_50   0.9 #>  5 0.0395  0.0404 resampling_cases_50   0.9 #>  6 0.0494  0.0505 resampling_cases_50   0.9 #>  7 0.0592  0.0606 resampling_cases_50   0.9 #>  8 0.0691  0.0708 resampling_cases_50   0.9 #>  9 0.0790  0.0809 resampling_cases_50   0.9 #> 10 0.0889  0.0910 resampling_cases_50   0.9 #> # ℹ 192 more rows #>  #> $Method_3 #> # A tibble: 202 × 4 #>      FAR    HR method              level #>    <dbl> <dbl> <chr>               <dbl> #>  1  0     0    resampling_cases_50   0.9 #>  2  0.01  0.01 resampling_cases_50   0.9 #>  3  0.02  0.02 resampling_cases_50   0.9 #>  4  0.03  0.03 resampling_cases_50   0.9 #>  5  0.04  0.04 resampling_cases_50   0.9 #>  6  0.05  0.05 resampling_cases_50   0.9 #>  7  0.06  0.06 resampling_cases_50   0.9 #>  8  0.07  0.07 resampling_cases_50   0.9 #>  9  0.08  0.08 resampling_cases_50   0.9 #> 10  0.09  0.09 resampling_cases_50   0.9 #> # ℹ 192 more rows #>"},{"path":"https://aijordan.github.io/triptych/reference/resampling_cases.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrap case resampling for triptych objects — resampling_cases.triptych_murphy","title":"Bootstrap case resampling for triptych objects — resampling_cases.triptych_murphy","text":"Bootstrap case resampling triptych objects","code":""},{"path":"https://aijordan.github.io/triptych/reference/resampling_cases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrap case resampling for triptych objects — resampling_cases.triptych_murphy","text":"","code":"# S3 method for triptych_murphy resampling_cases(x, level = 0.9, n_boot = 1000, ...)  # S3 method for triptych_reliability resampling_cases(x, level = 0.9, n_boot = 1000, ...)  resampling_cases(x, level = 0.9, n_boot = 1000, ...)  # S3 method for triptych_roc resampling_cases(x, level = 0.9, n_boot = 1000, ...)"},{"path":"https://aijordan.github.io/triptych/reference/resampling_cases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrap case resampling for triptych objects — resampling_cases.triptych_murphy","text":"x One triptych objects. level single value determines quantiles bootstrap sample return. quantiles envelop level * n_boot bootstrap draws. n_boot number bootstrap samples. ... Additional arguments passed methods.","code":""},{"path":"https://aijordan.github.io/triptych/reference/resampling_cases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootstrap case resampling for triptych objects — resampling_cases.triptych_murphy","text":"list tibbles contain information draw confidence regions. length equal number forecasting methods x.","code":""},{"path":"https://aijordan.github.io/triptych/reference/resampling_cases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bootstrap case resampling for triptych objects — resampling_cases.triptych_murphy","text":"","code":"# Triptych construction forecasts <- matrix(runif(300), ncol = 3) colnames(forecasts) <- c(\"Method_1\", \"Method_2\", \"Method_3\") observations <- rbinom(100, 1, forecasts[, 1]) tr <- triptych(forecasts, observations)  resampling_cases(tr$murphy, n_boot = 50) #> $Method_1 #> # A tibble: 1,000 × 5 #>    threshold   lower   upper method              level #>        <dbl>   <dbl>   <dbl> <chr>               <dbl> #>  1   0       0       0       resampling_cases_50   0.9 #>  2   0.00100 0.00100 0.00128 resampling_cases_50   0.9 #>  3   0.00200 0.00200 0.00256 resampling_cases_50   0.9 #>  4   0.00300 0.00300 0.00384 resampling_cases_50   0.9 #>  5   0.00400 0.00400 0.00513 resampling_cases_50   0.9 #>  6   0.00501 0.00501 0.00641 resampling_cases_50   0.9 #>  7   0.00601 0.00601 0.00769 resampling_cases_50   0.9 #>  8   0.00701 0.00701 0.00897 resampling_cases_50   0.9 #>  9   0.00801 0.00801 0.0103  resampling_cases_50   0.9 #> 10   0.00901 0.00901 0.0115  resampling_cases_50   0.9 #> # ℹ 990 more rows #>  #> $Method_2 #> # A tibble: 1,000 × 5 #>    threshold   lower   upper method              level #>        <dbl>   <dbl>   <dbl> <chr>               <dbl> #>  1   0       0       0       resampling_cases_50   0.9 #>  2   0.00100 0.00102 0.00128 resampling_cases_50   0.9 #>  3   0.00200 0.00204 0.00256 resampling_cases_50   0.9 #>  4   0.00300 0.00306 0.00384 resampling_cases_50   0.9 #>  5   0.00400 0.00408 0.00513 resampling_cases_50   0.9 #>  6   0.00501 0.00511 0.00641 resampling_cases_50   0.9 #>  7   0.00601 0.00613 0.00769 resampling_cases_50   0.9 #>  8   0.00701 0.00715 0.00897 resampling_cases_50   0.9 #>  9   0.00801 0.00817 0.0103  resampling_cases_50   0.9 #> 10   0.00901 0.00919 0.0115  resampling_cases_50   0.9 #> # ℹ 990 more rows #>  #> $Method_3 #> # A tibble: 1,000 × 5 #>    threshold    lower   upper method              level #>        <dbl>    <dbl>   <dbl> <chr>               <dbl> #>  1   0       0        0       resampling_cases_50   0.9 #>  2   0.00100 0.000961 0.00130 resampling_cases_50   0.9 #>  3   0.00200 0.00192  0.00260 resampling_cases_50   0.9 #>  4   0.00300 0.00288  0.00390 resampling_cases_50   0.9 #>  5   0.00400 0.00384  0.00521 resampling_cases_50   0.9 #>  6   0.00501 0.00470  0.00641 resampling_cases_50   0.9 #>  7   0.00601 0.00565  0.00769 resampling_cases_50   0.9 #>  8   0.00701 0.00659  0.00897 resampling_cases_50   0.9 #>  9   0.00801 0.00753  0.0103  resampling_cases_50   0.9 #> 10   0.00901 0.00847  0.0115  resampling_cases_50   0.9 #> # ℹ 990 more rows #>  resampling_cases(tr$reliability, n_boot = 50) #> $Method_1 #> # A tibble: 100 × 5 #>         x lower upper method              level #>     <dbl> <dbl> <dbl> <chr>               <dbl> #>  1 0.0112     0     0 resampling_cases_50   0.9 #>  2 0.0282     0     0 resampling_cases_50   0.9 #>  3 0.0335     0     0 resampling_cases_50   0.9 #>  4 0.0381     0     0 resampling_cases_50   0.9 #>  5 0.0674     0     0 resampling_cases_50   0.9 #>  6 0.0791     0     0 resampling_cases_50   0.9 #>  7 0.0801     0     0 resampling_cases_50   0.9 #>  8 0.0894     0     0 resampling_cases_50   0.9 #>  9 0.0938     0     0 resampling_cases_50   0.9 #> 10 0.0943     0     0 resampling_cases_50   0.9 #> # ℹ 90 more rows #>  #> $Method_2 #> # A tibble: 100 × 5 #>         x  lower upper method              level #>     <dbl>  <dbl> <dbl> <chr>               <dbl> #>  1 0.0158 0.1    0.4   resampling_cases_50   0.9 #>  2 0.0624 0.111  0.394 resampling_cases_50   0.9 #>  3 0.0725 0      0.394 resampling_cases_50   0.9 #>  4 0.0756 0      0.394 resampling_cases_50   0.9 #>  5 0.0810 0      0.394 resampling_cases_50   0.9 #>  6 0.0877 0      0.394 resampling_cases_50   0.9 #>  7 0.0942 0      0.397 resampling_cases_50   0.9 #>  8 0.0991 0      0.463 resampling_cases_50   0.9 #>  9 0.101  0.0192 0.482 resampling_cases_50   0.9 #> 10 0.111  0.120  0.482 resampling_cases_50   0.9 #> # ℹ 90 more rows #>  #> $Method_3 #> # A tibble: 100 × 5 #>          x  lower upper method              level #>      <dbl>  <dbl> <dbl> <chr>               <dbl> #>  1 0.00401 0      0     resampling_cases_50   0.9 #>  2 0.0375  0.0272 0.435 resampling_cases_50   0.9 #>  3 0.0432  0.0318 0.449 resampling_cases_50   0.9 #>  4 0.0562  0      0.449 resampling_cases_50   0.9 #>  5 0.0597  0      0.449 resampling_cases_50   0.9 #>  6 0.0856  0.0662 0.456 resampling_cases_50   0.9 #>  7 0.106   0.0824 0.476 resampling_cases_50   0.9 #>  8 0.107   0.0833 0.476 resampling_cases_50   0.9 #>  9 0.110   0.0833 0.476 resampling_cases_50   0.9 #> 10 0.115   0.0833 0.476 resampling_cases_50   0.9 #> # ℹ 90 more rows #>  resampling_cases(tr$roc, n_boot = 50) #> $Method_1 #> # A tibble: 202 × 4 #>         FAR     HR method              level #>       <dbl>  <dbl> <chr>               <dbl> #>  1 0        0      resampling_cases_50   0.9 #>  2 0        0.0233 resampling_cases_50   0.9 #>  3 0.000644 0.0457 resampling_cases_50   0.9 #>  4 0.00294  0.0659 resampling_cases_50   0.9 #>  5 0.00541  0.0859 resampling_cases_50   0.9 #>  6 0.00782  0.106  resampling_cases_50   0.9 #>  7 0.0102   0.126  resampling_cases_50   0.9 #>  8 0.0126   0.146  resampling_cases_50   0.9 #>  9 0.0150   0.166  resampling_cases_50   0.9 #> 10 0.0177   0.186  resampling_cases_50   0.9 #> # ℹ 192 more rows #>  #> $Method_2 #> # A tibble: 202 × 4 #>        FAR     HR method              level #>      <dbl>  <dbl> <chr>               <dbl> #>  1 0       0      resampling_cases_50   0.9 #>  2 0.00983 0.0102 resampling_cases_50   0.9 #>  3 0.0197  0.0205 resampling_cases_50   0.9 #>  4 0.0295  0.0306 resampling_cases_50   0.9 #>  5 0.0394  0.0409 resampling_cases_50   0.9 #>  6 0.0492  0.0511 resampling_cases_50   0.9 #>  7 0.0590  0.0613 resampling_cases_50   0.9 #>  8 0.0689  0.0715 resampling_cases_50   0.9 #>  9 0.0787  0.0817 resampling_cases_50   0.9 #> 10 0.0885  0.0919 resampling_cases_50   0.9 #> # ℹ 192 more rows #>  #> $Method_3 #> # A tibble: 202 × 4 #>        FAR     HR method              level #>      <dbl>  <dbl> <chr>               <dbl> #>  1 0       0      resampling_cases_50   0.9 #>  2 0.00992 0.0101 resampling_cases_50   0.9 #>  3 0.0198  0.0202 resampling_cases_50   0.9 #>  4 0.0297  0.0303 resampling_cases_50   0.9 #>  5 0.0397  0.0404 resampling_cases_50   0.9 #>  6 0.0496  0.0506 resampling_cases_50   0.9 #>  7 0.0595  0.0607 resampling_cases_50   0.9 #>  8 0.0694  0.0708 resampling_cases_50   0.9 #>  9 0.0793  0.0809 resampling_cases_50   0.9 #> 10 0.0892  0.0910 resampling_cases_50   0.9 #> # ℹ 192 more rows #>"},{"path":"https://aijordan.github.io/triptych/reference/roc.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluation of forecasts using ROC curves — roc","title":"Evaluation of forecasts using ROC curves — roc","text":"ROC curve visualizes discrimination ability displaying hit rate false alarm rate threshold values.","code":""},{"path":"https://aijordan.github.io/triptych/reference/roc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluation of forecasts using ROC curves — roc","text":"","code":"roc(x, y = NULL, concave = TRUE, ...)  as_roc(x, r)"},{"path":"https://aijordan.github.io/triptych/reference/roc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluation of forecasts using ROC curves — roc","text":"x data frame, list, matrix, object can coerced tibble. Contains numeric forecasts. y numeric vector observations. missing, column name \"y\" must present tibble coerced x. concave boolean value indicating whether calculate concave hull raw ROC diagnostic. ... Unused. r reference triptych_mcbdsc object whose attributes used casting.","code":""},{"path":"https://aijordan.github.io/triptych/reference/roc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluation of forecasts using ROC curves — roc","text":"triptych_roc object, vctrs_vctr subclass, length equal number forecasting methods supplied x. entry named according corresponding forecasting method, contains list named objects: estimate: data frame hit rates false rates. region: Either empty list, data frame pointwise confidence intervals (along diagonal lines slope \\(-\\pi_0/\\pi_1\\)) added add_confidence(). x: numeric vector original forecasts. Access convenient estimates(), regions(), forecasts().","code":""},{"path":[]},{"path":"https://aijordan.github.io/triptych/reference/roc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluation of forecasts using ROC curves — roc","text":"","code":"data(ex_binary, package = \"triptych\") # Construct and inspect rc <- roc(ex_binary) # or: rc <- roc(ex_binary[2:11], ex_binary[1]) rc #> <triptych_roc[10]> #>             X01             X02             X03             X04             X05  #> <named list[3]> <named list[3]> <named list[3]> <named list[3]> <named list[3]>  #>             X06             X07             X08             X09             X10  #> <named list[3]> <named list[3]> <named list[3]> <named list[3]> <named list[3]>  class(rc) #> [1] \"triptych_roc\" \"vctrs_vctr\"   \"list\"          # 1. Choose 4 predictions # 2. Visualize # 3. Adjust the title of the legend rc[c(1, 3, 6, 9)] |>   autoplot() +   ggplot2::guides(colour = ggplot2::guide_legend(\"Forecast\"))     # Build yourself using accessors library(ggplot2) df_est <- estimates(rc[c(1, 3, 6, 9)]) ggplot(df_est, aes(x = FAR, y = HR, col = forecast)) +   geom_segment(aes(x = 0, y = 0, xend = 1, yend = 1)) +   geom_path()"},{"path":"https://aijordan.github.io/triptych/reference/triptych-vctrs.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal vctrs methods — triptych-vctrs","title":"Internal vctrs methods — triptych-vctrs","text":"Internal vctrs methods","code":""},{"path":"https://aijordan.github.io/triptych/reference/triptych.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluation of forecasts using a Triptych — triptych","title":"Evaluation of forecasts using a Triptych — triptych","text":"triptych visualizes three important aspects predictive performance: Economic utility via Murphy curves, miscalibration via reliability curves, discrimination ability via ROC curves. triptych S3 class plotting methods ggplot2.","code":""},{"path":"https://aijordan.github.io/triptych/reference/triptych.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluation of forecasts using a Triptych — triptych","text":"","code":"triptych(x, y = NULL, ...)"},{"path":"https://aijordan.github.io/triptych/reference/triptych.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluation of forecasts using a Triptych — triptych","text":"x data frame, list, matrix, object can coerced tibble. Contains numeric forecasts. y numeric vector observations. missing, column name \"y\" must present tibble coerced x. ... Additional arguments passed murphy(), reliability(), roc(), mcbdsc().","code":""},{"path":"https://aijordan.github.io/triptych/reference/triptych.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluation of forecasts using a Triptych — triptych","text":"triptych object, tibble subclass, contains five columns: forecast: Contains names. murphy: Contains vctrs_vctr subclass Murphy curves. reliability: Contains vctrs_vctr subclass reliability curves. roc: Contains vctrs_vctr subclass ROC curves. mcbdsc: Contains vctrs_vctr subclass score decompositions.","code":""},{"path":[]},{"path":"https://aijordan.github.io/triptych/reference/triptych.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluation of forecasts using a Triptych — triptych","text":"","code":"data(ex_binary, package = \"triptych\") # Construct and inspect tr <- triptych(ex_binary) # or: tr <- triptych(ex_binary[2:11], ex_binary[1]) tr #> # A tibble: 10 × 5 #>    forecast          murphy     reliability             roc          mcbdsc #>    <chr>         <trpt_mur>      <trpt_rel>      <trpt_roc>   <trpt_mcbdsc> #>  1 X01      <named list[3]> <named list[3]> <named list[3]> <named list[3]> #>  2 X02      <named list[3]> <named list[3]> <named list[3]> <named list[3]> #>  3 X03      <named list[3]> <named list[3]> <named list[3]> <named list[3]> #>  4 X04      <named list[3]> <named list[3]> <named list[3]> <named list[3]> #>  5 X05      <named list[3]> <named list[3]> <named list[3]> <named list[3]> #>  6 X06      <named list[3]> <named list[3]> <named list[3]> <named list[3]> #>  7 X07      <named list[3]> <named list[3]> <named list[3]> <named list[3]> #>  8 X08      <named list[3]> <named list[3]> <named list[3]> <named list[3]> #>  9 X09      <named list[3]> <named list[3]> <named list[3]> <named list[3]> #> 10 X10      <named list[3]> <named list[3]> <named list[3]> <named list[3]> class(tr) #> [1] \"triptych\"   \"tbl_df\"     \"tbl\"        \"data.frame\"  # 1. Choose 4 predictions # 2. Add consistency bands (for reliability curves) # 3. Create patchwork object # 4. Adjust the title of the legend dplyr::slice(tr, 1, 3, 6, 9) |>   add_consistency(level = 0.9, n_boot = 100) |>   autoplot() &   ggplot2::guides(colour = ggplot2::guide_legend(\"Forecast\"))"},{"path":"https://aijordan.github.io/triptych/news/index.html","id":"triptych-010","dir":"Changelog","previous_headings":"","what":"triptych 0.1.0","title":"triptych 0.1.0","text":"Initial CRAN submission.","code":""}]
